plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.github.node-gradle.node' version '3.1.1'
}

group = 'com.github.milomarten'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "com.discord4j:discord4j-core:3.2.0"
	implementation "ch.qos.logback:logback-classic:1.2.3"
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.r2dbc:r2dbc-h2:0.8.4.RELEASE'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

node {
	nodeProjectDir  = file("${project.projectDir}/app")
	download = true
	version = '14.15.5'
}

task startUi(type: NpmTask) {
	group = 'ui'
	args = ['run', 'start']
}

task buildUi(type: NpmTask) {
	group = 'ui'
	args = ['run', 'build']
}

task cleanUi(type: Delete) {
	group = 'ui'
	delete layout.projectDirectory.dir('src/main/resources/static')
	delete layout.projectDirectory.dir('app/dist')
}

task packageUi(type: Copy) {
	group = 'ui'
	dependsOn 'buildUi'
	from layout.projectDirectory.dir('app/dist/pngtuber-app')
	into layout.projectDirectory.dir('src/main/resources/static')
}

jar.dependsOn(packageUi)
clean.dependsOn(cleanUi)
